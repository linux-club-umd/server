# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
	server_name linuxclub.umd.edu;
	location / {
	    	include scgi_params;
	    	scgi_param SCRIPT_NAME "";
	    	scgi_pass localhost:9001;
	}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/linuxclub.umd.edu/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/linuxclub.umd.edu/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    }

    server {
    	server_name www.jeffreyfisher.net;
	return 301 $scheme://jeffreyfisher.net$request_uri;
    }

    server {
        server_name jeffreyfisher.net;
	#root         /usr/share/nginx/html;
	root         /var/www/html;
	#charset utf-8;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        error_page 404 /404.html;
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }

	location /code {
		include scgi_params;
		scgi_param SCRIPT_NAME "/code";
		scgi_pass localhost:9000;
	}

	#location /wiki {
	#	proxy_pass http://127.0.0.1:9010;
	#}

	    listen [::]:443 ssl ipv6only=on; # managed by Certbot
	    listen 443 ssl; # managed by Certbot
	    ssl_certificate /etc/letsencrypt/live/jeffreyfisher.net/fullchain.pem; # managed by Certbot
	    ssl_certificate_key /etc/letsencrypt/live/jeffreyfisher.net/privkey.pem; # managed by Certbot
	    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
	    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#        location = /404.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#        location = /50x.html {
#        }
#    }



    server {
    if ($host = dragon.jeffreyfisher.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        listen       80;
        listen       [::]:80;
        server_name  .dragon.jeffreyfisher.net;
    return 404; # managed by Certbot


}

    server {
    if ($host = jeffreyfisher.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


        server_name  jeffreyfisher.net;
    
    listen [::]:80 ipv6only=on;
    listen 80;
    return 404; # managed by Certbot


}

    server {
    if ($host = linuxclub.umd.edu) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	server_name linuxclub.umd.edu;
    listen 80;
    return 404; # managed by Certbot


}}

